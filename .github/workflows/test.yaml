name: "Tag and Release Workflow"

permissions:
  contents: write
  packages: write
  id-token: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SHARED_ACR: "gcshared671"

jobs:
  init:
    name: "Init"
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.diff_check.outputs.any_changed }}
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b

      - name: "Check for file changes"
        id: diff_check
        uses: tj-actions/changed-files@d6babd6899969df1a11d14c368283ea4436bca78
        with:
          files: |
            Dockerfile
            app/*
            .github/*

  build_publish:
    name: "Build Docker Image with new Tag"
    runs-on: ubuntu-latest
    needs: init
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      previous_tag: ${{ steps.tag_version.outputs.previous_tag }}
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b

      - name: "Bump version and push tag"
        if: github.event.pull_request.merged == true
        id: tag_version
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          default_bump: minor
          tag_prefix: ""
          fetch_all_tags: true

      - id: set_output_tag
        if: github.event.pull_request.merged == true
        run: echo "new_tag=${{ steps.tag_version.outputs.new_tag }}" >> $GITHUB_OUTPUT

      - id: set_previous_tag
        if: github.event.pull_request.merged == true
        run: echo "previous_tag=${{ steps.tag_version.outputs.previous_tag }}" >> $GITHUB_OUTPUT


      # - name: "Login to Azure CLI"
      #   uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a
      #   with:
      #     client-id: ${{ vars.SHARED_OWNER_APP_ID }}
      #     tenant-id: ${{ vars.AZ_TENANT_ID }}
      #     subscription-id: ${{ vars.AZ_SHARED_SUBSCRIPTION_ID }}

      # - name: "Login to shared ACR"
      #   run: |
      #     echo -e "ðŸ“¡ \033[1mLogging in to shared ACR ... \e[0m"
      #     az acr login --name ${SHARED_ACR}

      - name: "Build Docker image"
        id: image_version
        run: |
          if [[ ${{ github.event_name }} == "pull_request" ]]; then
            export IMAGE_VERSION=`echo ${{github.event.pull_request.head.sha}}| cut -c1-8`
          else
            export IMAGE_VERSION=${{ steps.tag_version.outputs.new_tag }}
          fi

          echo "version=$IMAGE_VERSION" >> $GITHUB_OUTPUT
          docker build --tag ${SHARED_ACR}.azurecr.io/pim_enricher:$IMAGE_VERSION --file Dockerfile . || exit 1

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: '${{env.SHARED_ACR}}.azurecr.io/pim_enricher:${{ steps.set_image_version.outputs.version }}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: "pim-ericher push image"
        run: |
          echo docker
          # docker push ${SHARED_ACR}.azurecr.io/pim_enricher:${{ steps.image_version.outputs.version }}

  release:
    name: "Create Release for New Git Tag"
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build_publish
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4.1.6

      - name: "Generate changelog"
        id: changelog
        uses: metcalfc/changelog-generator@v4.3.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}
          head-ref: "${{ needs.build_publish.outputs.new_tag }}"
          base-ref: "${{ needs.build_publish.outputs.previous_tag }}"

      - name: "Create Release"
        id: create_release
        uses: ncipollo/release-action@v1.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.build_publish.outputs.new_tag }}
          name: Release ${{ needs.build_publish.outputs.new_tag }}
          body: ${{ steps.changelog.outputs.changelog }}
